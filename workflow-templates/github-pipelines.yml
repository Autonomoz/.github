# This workflow will build and push a Docker container to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a GitHub Personal access token with "repo" and "read:packages" permissions.
#
# 3. Create three app settings on your Azure Web app:
#       DOCKER_REGISTRY_SERVER_URL: Set this to "https://ghcr.io"
#       DOCKER_REGISTRY_SERVER_USERNAME: Set this to the GitHub username or organization that owns the repository
#       DOCKER_REGISTRY_SERVER_PASSWORD: Set this to the value of your PAT token from the previous step
#
# 4.  Create secrets in your environment:
#       AZURE_WEBAPP_PUBLISH_PROFILE: set secret value with publish profile content
#       AZURE_REGISTRY_USERNAME: set secret value with username (ACR|Access Keys)
#       AZURE_REGISTRY_PASSWORD: set secret value with password (ACR|Access Keys)
#
# 5.  Create variables in your environment:
#       AZURE_LOGIN_SERVER: set value of variable with login server (ACR)
#       AZURE_REGISTRY_REPOSITORY: set value of variable with repository name (ACR|Repositories)
#       AZURE_WEBAPP_NAME: set value of variable with web app name (Web app)
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: "NextJs for Azure: Build & Deploy"

on:
  push:
    branches: [DEFAULT-BRANCH]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Run - Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run - Lint
        run: yarn lint

      - name: Run - Build
        run: yarn build

      # Enable execution when testing
      # - name: Run - Test
      #   run: yarn test

  deploy:
    runs-on: ubuntu-latest
    environment: ENVIRONMENT # Change to your environment name
    needs: build
    steps:
      - name: Github Checkout
        uses: actions/checkout@v3

      - name: ACR authentication
        uses: azure/docker-login@v1
        with:
          login-server: ${{ vars.AZURE_LOGIN_SERVER }}
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      - name: Docker Build & Push to ACR
        run: |
          docker build . -t ${{ vars.AZURE_LOGIN_SERVER }}/${{ vars.AZURE_REGISTRY_REPOSITORY }}:${{ github.sha }}
          docker push ${{ vars.AZURE_LOGIN_SERVER }}/${{ vars.AZURE_REGISTRY_REPOSITORY }}:${{ github.sha }}

      - name: Set Organization & Repository Name
        run: echo "GITHUB_REPOSITORY=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Deploy to Azure Web App for Container
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ vars.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: "ghcr.io/${{ vars.GITHUB_REPOSITORY }}:${{ github.sha }}"
